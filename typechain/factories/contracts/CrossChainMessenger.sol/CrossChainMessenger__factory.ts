/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrossChainMessenger,
  CrossChainMessengerInterface,
} from "../../../contracts/CrossChainMessenger.sol/CrossChainMessenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "RateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "POLYGON_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMessagesPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messageCountByPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendToPolygon",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxMessagesPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002f6f38038062002f6f8339818101604052810190620000379190620005a6565b80338060006001600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ad90620005e7565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200013e576200013d816200044f60201b60201c565b5b5050506000600260146101000a81548160ff0219169083151502179055506200017867f372bc435ce75fc060c01b6200058060201b60201c565b62000194670e29282fed8ed9be60c01b6200058060201b60201c565b8060038190555050620001b8677afad8d6a97b422760c01b6200058360201b60201c565b620001d467483733007b51650160c01b6200058360201b60201c565b620001f0670bb652cd737227d160c01b6200058360201b60201c565b6200020c67ba569e4a65fbcc9d60c01b6200058360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200027e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002759062000625565b60405180910390fd5b6200029a67bc61c872ca4d2e5060c01b6200058360201b60201c565b620002b5668ff1e76e853d7160c01b6200058360201b60201c565b620002d1676e024726fb4f886b60c01b6200058360201b60201c565b620002ed67b0639150c513d59f60c01b6200058360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200035f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003569062000663565b60405180910390fd5b6200037b67bd31afac1f96a59660c01b6200058360201b60201c565b62000397675ce4bd57da754f3660c01b6200058360201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620003e7679bb6e61d0da89cdd60c01b6200058360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505062000437677b04acb23897fa5960c01b6200058360201b60201c565b67016345785d8a0000600581905550505050620006df565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620004c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004b790620006a1565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b50565b50565b60008151905060018060a01b0381168114620005a157600080fd5b919050565b600080600060608486031215620005bc57600080fd5b620005c78462000586565b9250620005d76020850162000586565b9150604084015190509250925092565b60208152601860208201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060408201526000606082019050919050565b60208152601660208201527f496e76616c696420726f7574657220616464726573730000000000000000000060408201526000606082019050919050565b60208152601460208201527f496e76616c69642057455448206164647265737300000000000000000000000060408201526000606082019050919050565b60208152601760208201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060408201526000606082019050919050565b60805160a05161284762000728600039600081816106740152818161163d01526116fa015260008181610b1901528181611219015281816119f70152611bf501526128476000f3fe60806040526004361061014f5760003560e01c806382b12dd7116100b6578063a98de8881161006f578063a98de888146103f8578063b0f479a114610423578063befe2cb51461044e578063c325dd4c14610465578063f2fde38b14610490578063f887ea40146104b957610156565b806382b12dd71461030e5780638456cb591461033957806385572ffb1461035057806385659de1146103795780638da5cb5b146103a4578063998cdf83146103cf57610156565b806351858e271161010857806351858e2714610233578063541438331461024a5780635c975abb146102665780635cb69e65146102915780636ff1c9bc146102ce57806379ba5097146102f757610156565b8063086146d21461015b5780632fbc4558146101865780633697a3ae146101af5780633f4ba83a146101da5780633fc8cef3146101f15780634a4e3bd51461021c57610156565b3661015657005b600080fd5b34801561016757600080fd5b506101706104e4565b60405161017d9190611fc7565b60405180910390f35b34801561019257600080fd5b506101ad60048036038101906101a89190611fd8565b610535565b005b3480156101bb57600080fd5b506101c46105f6565b6040516101d19190611fc7565b60405180910390f35b3480156101e657600080fd5b506101ef6105fc565b005b3480156101fd57600080fd5b50610206610672565b6040516102139190611ff4565b60405180910390f35b34801561022857600080fd5b50610231610696565b005b34801561023f57600080fd5b5061024861070c565b005b610264600480360381019061025f9190612024565b610782565b005b34801561027257600080fd5b5061027b610c56565b604051610288919061204b565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190611fd8565b610c6d565b6040516102c59190611fc7565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061205e565b610c85565b005b34801561030357600080fd5b5061030c610f84565b005b34801561031a57600080fd5b5061032361111b565b6040516103309190611fc7565b60405180910390f35b34801561034557600080fd5b5061034e611121565b005b34801561035c57600080fd5b5061037760048036038101906103729190612085565b611197565b005b34801561038557600080fd5b5061038e611881565b60405161039b9190611fc7565b60405180910390f35b3480156103b057600080fd5b506103b96118c7565b6040516103c691906120dc565b60405180910390f35b3480156103db57600080fd5b506103f660048036038101906103f19190611fd8565b6118f1565b005b34801561040457600080fd5b5061040d6119b2565b60405161041a91906120f5565b60405180910390f35b34801561042f57600080fd5b506104386119b7565b60405161044591906120dc565b60405180910390f35b34801561045a57600080fd5b50610463611a1b565b005b34801561047157600080fd5b5061047a611bd9565b6040516104879190611fc7565b60405180910390f35b34801561049c57600080fd5b506104b760048036038101906104b29190612024565b611bdf565b005b3480156104c557600080fd5b506104ce611bf3565b6040516104db9190612110565b60405180910390f35b60006104fa67281f22327b9bd7aa60c01b611c17565b61050e67fd518ca23c476cbc60c01b611c17565b610522678e3dd61dab0e626560c01b611c17565b610e1042610530919061213f565b905090565b61054967fcac6a651fc60b4a60c01b611c17565b610551611c1a565b61056567d65f57738532aa4b60c01b611c17565b61057967aa10ea64202c43d060c01b611c17565b61058d67a0acb552b48e604b60c01b611c17565b806003819055506105a8673e828ff142836dc260c01b611c17565b6105bc67219956edeb4deb2660c01b611c17565b7f1939de75d13c836ba62103f23c7a2622e9cbc2113aa33a8c74eb28e409313db2816040516105eb9190611fc7565b60405180910390a150565b60035481565b61061067573ebed94be552b060c01b611cac565b610618611c1a565b61062c67d0a36e4bb6c769b060c01b611cac565b61064067ede05394b4d180e760c01b611cac565b61065467c9da6c95a1dd1ebb60c01b611cac565b610668675b5c75ed4174ee5f60c01b611cac565b610670611caf565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106aa674ab9e204873fe88060c01b611c17565b6106b2611c1a565b6106c6675361adab7879275760c01b611c17565b6106da670889b6cd4d83e27b60c01b611c17565b6106ee672e6caf6ace937eb560c01b611c17565b61070267fbc9834937f4f0f260c01b611c17565b61070a611caf565b565b610720672bc2e2677a6df70460c01b611c17565b610728611c1a565b61073c67e2933530d69b9ff560c01b611c17565b610750674352cba3204e20fc60c01b611c17565b61076467212bc766bd55b8b360c01b611c17565b61077867ad1648b582bac18e60c01b611c17565b610780611d12565b565b61079667c9edcbae7156314c60c01b611cac565b61079e611d75565b6107b267bfc11b31671d792960c01b611cac565b6107c667e433a19c5b86552260c01b611cac565b6107ce611dc4565b6107e267d4b8b95b6156090060c01b611cac565b6107f667a0537c06b79faa8360c01b611cac565b61080a67be39444a7b0e6d3360c01b611cac565b61081e672f2693e8647d564d60c01b611cac565b61083267d790e3624bc0140d60c01b611cac565b6005543411610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90612167565b60405180910390fd5b61088a67108d3e23148a599260c01b611cac565b61089e6786381a34bee8bf2960c01b611cac565b6108b26738ade48744d4f19e60c01b611cac565b6108c667e31cde6d0cc9cd0560c01b611cac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c906121a5565b60405180910390fd5b61094967e2360f7410f836bd60c01b611cac565b61095d67381c6def88311b8d60c01b611cac565b61097167ac30444dae65d43d60c01b611cac565b610979611a1b565b61098d674aec59e7b5737a9860c01b611cac565b6109a16798ad738bb4e5c14260c01b611cac565b6000600554346109b191906121e3565b90506109c767523fdb28d5d2a11360c01b611cac565b6109db673855e5909f291cd860c01b611cac565b600082826040516020016109f0929190612201565b6040516020818303038152906040529050610a156718ba5e470cc60ef460c01b611cac565b610a296738625f2b14ec2bfd60c01b611cac565b60006040518060a0016040528085604051602001610a4791906120dc565b6040516020818303038152906040528152602001838152602001600067ffffffffffffffff811115610a7c57610a7b612221565b5b604051908082528060200260200182016040528015610ab557816020015b610aa2611f97565b815260200190600190039081610a9a5790505b508152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001604051806020016040528060008152508152509050610b01678be581386f7b847960c01b611cac565b610b1567ad2520f421b78f9b60c01b611cac565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9346089856040518463ffffffff1660e01b8152600401610b74929190612283565b60206040518083038185885af1158015610b92573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bb79190612367565b9050610bcd67b071ac0303f98b6760c01b611cac565b610be167ae66e7eaa1062c7360c01b611cac565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827f3c20d4e8f42599eddf3cdb1184580d4ad4d4a3063dbd500a519f8fcf11ea241487604051610c3f9190611fc7565b60405180910390a450505050610c53611e0e565b50565b6000600260149054906101000a900460ff16905090565b60046020528060005260406000206000915090505481565b610c99672a9a8a0c34be2e6760c01b611cac565b610ca1611c1a565b610cb56712e87481799e2a7a60c01b611cac565b610cc967e4ca6901699fd3be60c01b611cac565b610cd1611e18565b610ce567255966fe94cd76ea60c01b611cac565b610cf967406bc5fca4d6466e60c01b611cac565b610d0d671eb66e8cec7314ce60c01b611cac565b610d2167ec0ce495edd639d860c01b611cac565b610d35675caa80fefb6d949760c01b611cac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b906121a5565b60405180910390fd5b610db867569a0b0296d60d1160c01b611cac565b610dcc676640f66f9c859e2560c01b611cac565b610de067f098f561f7124a1e60c01b611cac565b6000479050610df96716ebae3422df1da560c01b611cac565b610e0d67900d6608bb7bc78760c01b611cac565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610e3390612383565b60006040518083038185875af1925050503d8060008114610e70576040519150601f19603f3d011682016040523d82523d6000602084013e610e75565b606091505b50509050610e8d673540be2febd0b31e60c01b611cac565b610ea167d473b1bc3c3dc10b60c01b611cac565b610eb567699db1f3e42e66bd60c01b611cac565b80610ef5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eec9061238d565b60405180910390fd5b610f09671a0df8e66fbec86460c01b611cac565b610f1d676275826f0ad28c4360c01b611cac565b610f3167717d0aede648941060c01b611cac565b8273ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969583604051610f779190611fc7565b60405180910390a2505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100b906123cb565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60055481565b611135679d728604352a967f60c01b611cac565b61113d611c1a565b61115167fafda2f9d8997dd560c01b611cac565b611165677e32ac3b54933ba260c01b611cac565b61117967e958c7fcddabb23760c01b611cac565b61118d67e480bae594fbcef160c01b611cac565b611195611d12565b565b6111ab67ebd3933f4bd3c50a60c01b611cac565b6111b3611dc4565b6111c767fb626e38573010f960c01b611cac565b6111db674decdea7c33fe46960c01b611cac565b6111ef679deafb9f08b05ce060c01b611cac565b61120367c9de36c533ae2b2160c01b611cac565b61121767f72d5da2abc6c9dd60c01b611cac565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c90612409565b60405180910390fd5b6112b967ecabf6acd03b5e5b60c01b611cac565b6112cd67ae2966b3e28f49df60c01b611cac565b6112e167919393bda31d1c5360c01b611cac565b6112f567c453fbd9b911e1b860c01b611cac565b608a81602001602081019061130a9190612447565b67ffffffffffffffff1614611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b9061247b565b60405180910390fd5b61136867e7b6c8db9ea653dd60c01b611cac565b61137c67a34b08efe7ad0d3660c01b611cac565b61139067b1227e995299d4db60c01b611cac565b611398611a1b565b6113ac67b2fe1417003e303660c01b611cac565b6113c067bd858fe612a7c53b60c01b611cac565b60008180604001906113d291906124b9565b906113dd919061250b565b60601c90506113f667b404e85bd252991560c01b611cac565b61140a677412e169533561cf60c01b611cac565b60008083806060019061141d91906124b9565b81019061142a9190612543565b91509150611442675967210aa8f2d1c360c01b611cac565b61145667dd5a1f6fb98be4fd60c01b611cac565b61146a671812443adbd60dc260c01b611cac565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d0906121a5565b60405180910390fd5b6114ed677c2914583116c3b060c01b611cac565b611501679ee77455348b84ad60c01b611cac565b6115156750cea80432a4ee8560c01b611cac565b6115296705f40b5a000948d060c01b611cac565b6000811161156c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156390612573565b60405180910390fd5b61158067b019f8f9ecb4393660c01b611cac565b611594676da62c4b26fa79c060c01b611cac565b6115a8671f09043d7c56de8760c01b611cac565b6115bc676064ced7d804dae860c01b611cac565b804710156115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f6906125b1565b60405180910390fd5b6116136706b6a34b4a8cd98360c01b611cac565b61162767dc18f358ac62e50260c01b611cac565b61163b67bbe408ccc6f6606160c01b611cac565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156116a357600080fd5b505af11580156116b7573d6000803e3d6000fd5b50505050506116d067f62b6d10d7eca61960c01b611cac565b6116e46701bf7034ae46992e60c01b611cac565b6116f8673da3dd7e0be0441460c01b611cac565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401611753929190612201565b6020604051808303816000875af1158015611772573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179691906125ef565b6117d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cc9061261b565b60405180910390fd5b6117e967feefadc3dcda3f6660c01b611cac565b6117fd6751d4235c32c5cc1960c01b611cac565b611811670d3e5493b88e1ac960c01b611cac565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1685600001357ff70d2dfb20a334fd3c84cd702f67ad5ba48227a1c9d7d2a96b68e5c50258d755846040516118739190611fc7565b60405180910390a450505050565b60006118976791307b0592be213860c01b611cac565b6118ab6759b31102dfe45ebd60c01b611cac565b6118bf67605a91703b106ab360c01b611cac565b600554905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611905678df083bb2935210660c01b611cac565b61190d611c1a565b6119216738da1a996efbdd0c60c01b611cac565b61193567150348616ed144ce60c01b611cac565b61194967e950c0168385546d60c01b611cac565b8060058190555061196467370787762170e35560c01b611cac565b61197867cfada262c54dbbe160c01b611cac565b7f42dfb00d085d601e55327921154ae76c1b24270b026c5a0c51caee18eb4c401f816040516119a79190611fc7565b60405180910390a150565b608981565b60006119cd670120df5ca59ed5eb60c01b611cac565b6119e167fc9f1a8f2391fc5360c01b611cac565b6119f56722f11e3cfeb5b2a960c01b611cac565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b611a2f67b7d15f3f3995922160c01b611c17565b611a37611dc4565b611a4b67703fda4381aa216a60c01b611c17565b611a5f6781cafae36206241960c01b611c17565b611a73671eb30454185d85a460c01b611c17565b611a8767b7479874da03bf7660c01b611c17565b6000611a916104e4565b9050611aa767d4e9a4909eee2c8f60c01b611c17565b611abb67aaa3b34c0b58ea3460c01b611c17565b611acf6722312067c990a34460c01b611c17565b600354600460008381526020019081526020016000205410611b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1d90612659565b60405180910390fd5b611b3a67a08de02555e5b47f60c01b611c17565b611b4e67aa012563fe9cafef60c01b611c17565b600460008281526020019081526020016000206000815480929190611b72906126bd565b9190505550611b8b676bbd4e18b0faf3ad60c01b611c17565b611b9f67652fb0e66ca847f260c01b611c17565b7f18d40bf3aed310fecb4c4b5f29e3d33783bbeef10318fd51c9e9fdea872d6add81604051611bce9190611fc7565b60405180910390a150565b610e1081565b611be7611c1a565b611bf081611e61565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca1906126db565b60405180910390fd5b565b50565b611cb7611e18565b6000600260146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611cfb611f8f565b604051611d0891906120dc565b60405180910390a1565b611d1a611dc4565b6001600260146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d5e611f8f565b604051611d6b91906120dc565b60405180910390a1565b600260005403611dba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db190612719565b60405180910390fd5b6002600081905550565b611dcc610c56565b15611e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e0390612757565b60405180910390fd5b565b6001600081905550565b611e20610c56565b611e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5690612795565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ecf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ec6906127d3565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600033905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600060208201905082825292915050565b600060208284031215611fea57600080fd5b8135905092915050565b600060208201905060018060a01b038316825292915050565b60018060a01b038116811461202157600080fd5b50565b60006020828403121561203657600080fd5b81356120418161200d565b8091505092915050565b6000602082019050821515825292915050565b60006020828403121561207057600080fd5b813561207b8161200d565b8091505092915050565b60006020828403121561209757600080fd5b813567ffffffffffffffff8111156120ae57600080fd5b808301905060a081850312156120c357600080fd5b8091505092915050565b60018060a01b03811682525050565b600060208201905060018060a01b038316825292915050565b600060208201905067ffffffffffffffff8316825292915050565b600060208201905060018060a01b038316825292915050565b634e487b7160e01b600052601160045260246000fd5b60008261215c57634e487b7160e01b600052601260045260246000fd5b828204905092915050565b60208152601360208201527f496e73756666696369656e7420616d6f756e740000000000000000000000000060408201526000606082019050919050565b60208152601160208201527f496e76616c696420726563697069656e7400000000000000000000000000000060408201526000606082019050919050565b60008282039050818111156121fb576121fa612129565b5b92915050565b600060408201905060018060a01b03841682528260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b6000815180845260005b8181101561226357602080828601015181838801015250602081019050612241565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526122b060e0860182612237565b905081860151603f19808784030160608801526122cd8383612237565b92508488015191508087840301608088015282825180855285850191508584019450600093505b8084101561232857845160018060a01b038151168352868101518784015250868201915085850194506001840193506122f4565b506060890151955061233d60a08901876120cd565b60808901519550818882030160c08901526123588187612237565b96505050505050509392505050565b60006020828403121561237957600080fd5b8151905092915050565b6000819050919050565b60208152600f60208201527f5472616e73666572206661696c6564000000000000000000000000000000000060408201526000606082019050919050565b60208152601660208201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060408201526000606082019050919050565b60208152601360208201527f556e617574686f72697a65642073656e6465720000000000000000000000000060408201526000606082019050919050565b60006020828403121561245957600080fd5b813567ffffffffffffffff8116811461247157600080fd5b8091505092915050565b60208152601460208201527f496e76616c696420736f7572636520636861696e00000000000000000000000060408201526000606082019050919050565b6000808335601e198436030181126124d057600080fd5b80840190508035915067ffffffffffffffff8211156124ee57600080fd5b6020810192505080360382131561250457600080fd5b9250929050565b600081356bffffffffffffffffffffffff198082169250601485101561253b5780818660140360031b1b83161692505b505092915050565b6000806040838503121561255657600080fd5b82356125618161200d565b80925050602083013590509250929050565b60208152601d60208201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060408201526000606082019050919050565b60208152601460208201527f496e73756666696369656e742062616c616e636500000000000000000000000060408201526000606082019050919050565b60006020828403121561260157600080fd5b8151801515811461261157600080fd5b8091505092915050565b60208152601460208201527f57455448207472616e73666572206661696c656400000000000000000000000060408201526000606082019050919050565b60208152602660208201527f52617465206c696d697420657863656564656420666f722063757272656e742060408201527f706572696f64000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b6000801982036126d0576126cf612129565b5b600182019050919050565b60208152601660208201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060408201526000606082019050919050565b60208152601f60208201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060408201526000606082019050919050565b60208152601060208201527f5061757361626c653a207061757365640000000000000000000000000000000060408201526000606082019050919050565b60208152601460208201527f5061757361626c653a206e6f742070617573656400000000000000000000000060408201526000606082019050919050565b60208152601760208201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006040820152600060608201905091905056fea2646970667358221220834eed03f120d0f421bb40115770efc11c922e844c356ec033607f321c38c38464736f6c63430008130033";

type CrossChainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainMessenger__factory extends ContractFactory {
  constructor(...args: CrossChainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainMessenger> {
    return super.deploy(
      _router,
      _weth,
      _maxMessagesPerPeriod,
      overrides || {}
    ) as Promise<CrossChainMessenger>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _weth,
      _maxMessagesPerPeriod,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainMessenger {
    return super.attach(address) as CrossChainMessenger;
  }
  override connect(signer: Signer): CrossChainMessenger__factory {
    return super.connect(signer) as CrossChainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainMessengerInterface {
    return new utils.Interface(_abi) as CrossChainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainMessenger {
    return new Contract(address, _abi, signerOrProvider) as CrossChainMessenger;
  }
}
