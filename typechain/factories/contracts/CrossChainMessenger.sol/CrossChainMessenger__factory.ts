/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrossChainMessenger,
  CrossChainMessengerInterface,
} from "../../../contracts/CrossChainMessenger.sol/CrossChainMessenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFI_ORACLE_META_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POLYGON_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POLYGON_WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "recoverFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "sendToPolygon",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405266038d7ea4c680006003553480156200001c57600080fd5b5060405162001728380380620017288339810160408190526200003f9162000144565b806001600160a01b03811662000070576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03166080526200008733620000f4565b600180556002805460ff191690556001600160a01b038116620000ed5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726f75746572206164647265737300000000000000000000604482015260640162000067565b5062000176565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200015757600080fd5b81516001600160a01b03811681146200016f57600080fd5b9392505050565b608051611581620001a7600039600081816102aa0152818161058101528181610652015261080101526115816000f3fe6080604052600436106101025760003560e01c80638456cb5911610095578063b0f479a111610064578063b0f479a11461029b578063bc063e1a146102ce578063d4afe659146102e9578063e72f6e30146102fe578063f2fde38b1461031e57600080fd5b80638456cb591461020c57806385572ffb146102215780638da5cb5b146102415780639798d5cd1461027357600080fd5b80635a1c0366116100d15780635a1c03661461019b5780635c975abb146101bb578063715018a6146101d357806382b12dd7146101e857600080fd5b806301ffc9a71461010e5780632eeee998146101435780633f4ba83a14610171578063541438331461018857600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b5061012e610129366004611070565b61033e565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b50610158608a81565b60405167ffffffffffffffff909116815260200161013a565b34801561017d57600080fd5b50610186610375565b005b6101866101963660046110b6565b610387565b3480156101a757600080fd5b506101866101b63660046110d3565b610744565b3480156101c757600080fd5b5060025460ff1661012e565b3480156101df57600080fd5b506101866107d4565b3480156101f457600080fd5b506101fe60035481565b60405190815260200161013a565b34801561021857600080fd5b506101866107e6565b34801561022d57600080fd5b5061018661023c3660046110ec565b6107f6565b34801561024d57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161013a565b34801561027f57600080fd5b5061025b737ceb23fd6bc0add59e62ac25578270cff1b9f61981565b3480156102a757600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061025b565b3480156102da57600080fd5b506101fe662386f26fc1000081565b3480156102f557600080fd5b50610158608981565b34801561030a57600080fd5b506101866103193660046110b6565b610852565b34801561032a57600080fd5b506101866103393660046110b6565b610b52565b60006001600160e01b031982166385572ffb60e01b148061036f57506001600160e01b031982166301ffc9a760e01b145b92915050565b61037d610bc8565b610385610c22565b565b61038f610c74565b610397610ccd565b6001600160a01b0381166103e55760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b2b4bb32b960811b60448201526064015b60405180910390fd5b600354341161042c5760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d08185b5bdd5b9d606a1b60448201526064016103dc565b60006003543461043c9190611127565b6040805160a081019091526001600160a01b03841660c08201529091506000908060e0810160405160208183030381529060405281526020018360405160200161048891815260200190565b60408051601f19818403018152919052815260200160006040519080825280602002602001820160405280156104e457816020015b60408051808201909152600080825260208201528152602001906001900390816104bd5790505b50815260200160006001600160a01b03168152602001610562604051806040016040528062030d408152602001600115158152506040805182516024820152602092830151151560448083019190915282518083039091018152606490910190915290810180516001600160e01b03166397a657c960e01b17905290565b90526040516320487ded60e01b81529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906320487ded906105b99060899086906004016111a4565b602060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa919061127e565b905080600354101561064e5760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e742066656520666f7220434349500000000000000060448201526064016103dc565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166396f4e9f9836089866040518463ffffffff1660e01b81526004016106a09291906111a4565b60206040518083038185885af11580156106be573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106e3919061127e565b9050336001600160a01b0316817fa1b6c39465f3228ad8bc71e80a4e6b6b4ff8c562238e799d97e47a5993a041598660035460405161072c929190918252602082015260400190565b60405180910390a35050505061074160018055565b50565b61074c610bc8565b662386f26fc100008111156107995760405162461bcd60e51b81526020600482015260136024820152724665652065786365656473206d6178696d756d60681b60448201526064016103dc565b60038190556040518181527f42dfb00d085d601e55327921154ae76c1b24270b026c5a0c51caee18eb4c401f9060200160405180910390a150565b6107dc610bc8565b6103856000610d13565b6107ee610bc8565b610385610d63565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610841576040516335fdcccd60e21b81523360048201526024016103dc565b61074161084d8261144e565b610da0565b61085a610bc8565b6001600160a01b0381166109825747806108aa5760405162461bcd60e51b815260206004820152601160248201527027379022aa24103a37903932b1b7bb32b960791b60448201526064016103dc565b600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146108f7576040519150601f19603f3d011682016040523d82523d6000602084013e6108fc565b606091505b50509050806109435760405162461bcd60e51b8152602060048201526013602482015272115512081c9958dbdd995c9e4819985a5b1959606a1b60448201526064016103dc565b6040805160008152602081018490527f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600910160405180910390a1505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed919061127e565b905060008111610a365760405162461bcd60e51b81526020600482015260146024820152732737903a37b5b2b739903a37903932b1b7bb32b960611b60448201526064016103dc565b816001600160a01b031663a9059cbb610a576000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac891906114fb565b610b0c5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881c9958dbdd995c9e4819985a5b1959605a1b60448201526064016103dc565b604080516001600160a01b0384168152602081018390527f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600910160405180910390a15050565b610b5a610bc8565b6001600160a01b038116610bbf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dc565b61074181610d13565b6000546001600160a01b031633146103855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103dc565b610c2a611027565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260015403610cc65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103dc565b6002600155565b60025460ff16156103855760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d6b610ccd565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c573390565b610da8610ccd565b602081015167ffffffffffffffff16608a14610e065760405162461bcd60e51b815260206004820152601a60248201527f4d6573736167652066726f6d20696e76616c696420636861696e00000000000060448201526064016103dc565b6000808260600151806020019051810190610e21919061151d565b90925090506001600160a01b038216610e6f5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b2b4bb32b960811b60448201526064016103dc565b60008111610eb05760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016103dc565b737ceb23fd6bc0add59e62ac25578270cff1b9f6196001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038616600482015260248101859052737ceb23fd6bc0add59e62ac25578270cff1b9f619935063a9059cbb925060440190506020604051808303816000875af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e91906114fb565b610fe15760405162461bcd60e51b815260206004820152601460248201527315d15512081d1c985b9cd9995c8819985a5b195960621b60448201526064016103dc565b82516040518281526001600160a01b03841691907f4ad8286366216a121ffbecdd11163a134fc364cdf7cc99aae4cc3221d8d922699060200160405180910390a3505050565b60025460ff166103855760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103dc565b60006020828403121561108257600080fd5b81356001600160e01b03198116811461109a57600080fd5b9392505050565b6001600160a01b038116811461074157600080fd5b6000602082840312156110c857600080fd5b813561109a816110a1565b6000602082840312156110e557600080fd5b5035919050565b6000602082840312156110fe57600080fd5b813567ffffffffffffffff81111561111557600080fd5b820160a0818503121561109a57600080fd5b8181038181111561036f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000815180845260005b8181101561118457602081850181015186830182015201611168565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a0838601526111d160e086018261115e565b905081860151603f19808784030160608801526111ee838361115e565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561124157845180516001600160a01b031683528601518683015293850193600193909301929086019061120f565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611270818761115e565b9a9950505050505050505050565b60006020828403121561129057600080fd5b5051919050565b6040805190810167ffffffffffffffff811182821017156112ba576112ba611148565b60405290565b60405160a0810167ffffffffffffffff811182821017156112ba576112ba611148565b604051601f8201601f1916810167ffffffffffffffff8111828210171561130c5761130c611148565b604052919050565b803567ffffffffffffffff8116811461132c57600080fd5b919050565b600082601f83011261134257600080fd5b813567ffffffffffffffff81111561135c5761135c611148565b61136f601f8201601f19166020016112e3565b81815284602083860101111561138457600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126113b257600080fd5b8135602067ffffffffffffffff8211156113ce576113ce611148565b6113dc818360051b016112e3565b82815260069290921b840181019181810190868411156113fb57600080fd5b8286015b8481101561144357604081890312156114185760008081fd5b611420611297565b813561142b816110a1565b815281850135858201528352918301916040016113ff565b509695505050505050565b600060a0823603121561146057600080fd5b6114686112c0565b8235815261147860208401611314565b6020820152604083013567ffffffffffffffff8082111561149857600080fd5b6114a436838701611331565b604084015260608501359150808211156114bd57600080fd5b6114c936838701611331565b606084015260808501359150808211156114e257600080fd5b506114ef368286016113a1565b60808301525092915050565b60006020828403121561150d57600080fd5b8151801515811461109a57600080fd5b6000806040838503121561153057600080fd5b825161153b816110a1565b602093909301519294929350505056fea26469706673582212200216614b5e3ef31e17e35dc2d788a60471b6a3a077ea5259167a50810a31e46264736f6c63430008130033";

type CrossChainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainMessenger__factory extends ContractFactory {
  constructor(...args: CrossChainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainMessenger> {
    return super.deploy(
      _router,
      overrides || {}
    ) as Promise<CrossChainMessenger>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): CrossChainMessenger {
    return super.attach(address) as CrossChainMessenger;
  }
  override connect(signer: Signer): CrossChainMessenger__factory {
    return super.connect(signer) as CrossChainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainMessengerInterface {
    return new utils.Interface(_abi) as CrossChainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainMessenger {
    return new Contract(address, _abi, signerOrProvider) as CrossChainMessenger;
  }
}
