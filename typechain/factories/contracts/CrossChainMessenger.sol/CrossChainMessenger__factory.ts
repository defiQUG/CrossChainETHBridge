/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrossChainMessenger,
  CrossChainMessengerInterface,
} from "../../../contracts/CrossChainMessenger.sol/CrossChainMessenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "RateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "POLYGON_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RATE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMessagesPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messageCountByPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendToPolygon",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxMessagesPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002f3f38038062002f3f8339818101604052810190620000379190620005a6565b80338060006001600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ad90620005e7565b60405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200013e576200013d816200044f60201b60201c565b5b5050506000600260146101000a81548160ff02191690831515021790555062000178676cc8375707fff29a60c01b6200058060201b60201c565b62000194677c131330c3cd7b6960c01b6200058060201b60201c565b8060038190555050620001b8670bb652cd737227d160c01b6200058360201b60201c565b620001d467ba569e4a65fbcc9d60c01b6200058360201b60201c565b620001f067bc61c872ca4d2e5060c01b6200058360201b60201c565b6200020b668ff1e76e853d7160c01b6200058360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200027d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002749062000625565b60405180910390fd5b62000299676e024726fb4f886b60c01b6200058360201b60201c565b620002b567b0639150c513d59f60c01b6200058360201b60201c565b620002d167bd31afac1f96a59660c01b6200058360201b60201c565b620002ed675ce4bd57da754f3660c01b6200058360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200035f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003569062000663565b60405180910390fd5b6200037b679bb6e61d0da89cdd60c01b6200058360201b60201c565b62000397677b04acb23897fa5960c01b6200058360201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620003e7670120df5ca59ed5eb60c01b6200058360201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506200043767fc9f1a8f2391fc5360c01b6200058360201b60201c565b67016345785d8a0000600581905550505050620006df565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620004c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004b790620006a1565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b50565b50565b60008151905060018060a01b0381168114620005a157600080fd5b919050565b600080600060608486031215620005bc57600080fd5b620005c78462000586565b9250620005d76020850162000586565b9150604084015190509250925092565b60208152601860208201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060408201526000606082019050919050565b60208152601660208201527f496e76616c696420726f7574657220616464726573730000000000000000000060408201526000606082019050919050565b60208152601460208201527f496e76616c69642057455448206164647265737300000000000000000000000060408201526000606082019050919050565b60208152601760208201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060408201526000606082019050919050565b60805160a05161281762000728600039600081816106740152818161160d01526116ca015260008181610b19015281816111e9015281816119c70152611bc501526128176000f3fe60806040526004361061014f5760003560e01c806382b12dd7116100b6578063a98de8881161006f578063a98de888146103f8578063b0f479a114610423578063befe2cb51461044e578063c325dd4c14610465578063f2fde38b14610490578063f887ea40146104b957610156565b806382b12dd71461030e5780638456cb591461033957806385572ffb1461035057806385659de1146103795780638da5cb5b146103a4578063998cdf83146103cf57610156565b806351858e271161010857806351858e2714610233578063541438331461024a5780635c975abb146102665780635cb69e65146102915780636ff1c9bc146102ce57806379ba5097146102f757610156565b8063086146d21461015b5780632fbc4558146101865780633697a3ae146101af5780633f4ba83a146101da5780633fc8cef3146101f15780634a4e3bd51461021c57610156565b3661015657005b600080fd5b34801561016757600080fd5b506101706104e4565b60405161017d9190611f97565b60405180910390f35b34801561019257600080fd5b506101ad60048036038101906101a89190611fa8565b610535565b005b3480156101bb57600080fd5b506101c46105f6565b6040516101d19190611f97565b60405180910390f35b3480156101e657600080fd5b506101ef6105fc565b005b3480156101fd57600080fd5b50610206610672565b6040516102139190611fc4565b60405180910390f35b34801561022857600080fd5b50610231610696565b005b34801561023f57600080fd5b5061024861070c565b005b610264600480360381019061025f9190611ff4565b610782565b005b34801561027257600080fd5b5061027b610c56565b604051610288919061201b565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b39190611fa8565b610c6d565b6040516102c59190611f97565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061202e565b610c85565b005b34801561030357600080fd5b5061030c610f54565b005b34801561031a57600080fd5b506103236110eb565b6040516103309190611f97565b60405180910390f35b34801561034557600080fd5b5061034e6110f1565b005b34801561035c57600080fd5b5061037760048036038101906103729190612055565b611167565b005b34801561038557600080fd5b5061038e611851565b60405161039b9190611f97565b60405180910390f35b3480156103b057600080fd5b506103b9611897565b6040516103c691906120ac565b60405180910390f35b3480156103db57600080fd5b506103f660048036038101906103f19190611fa8565b6118c1565b005b34801561040457600080fd5b5061040d611982565b60405161041a91906120c5565b60405180910390f35b34801561042f57600080fd5b50610438611987565b60405161044591906120ac565b60405180910390f35b34801561045a57600080fd5b506104636119eb565b005b34801561047157600080fd5b5061047a611ba9565b6040516104879190611f97565b60405180910390f35b34801561049c57600080fd5b506104b760048036038101906104b29190611ff4565b611baf565b005b3480156104c557600080fd5b506104ce611bc3565b6040516104db91906120e0565b60405180910390f35b60006104fa67cddea2b7bae6f03460c01b611be7565b61050e67677a9356c687312560c01b611be7565b6105226709c3aba41539b01b60c01b611be7565b610e1042610530919061210f565b905090565b610549672a288b8c8e46671260c01b611be7565b610551611bea565b610565671b7468e9eb419b2560c01b611be7565b61057967fbc9834937f4f0f260c01b611be7565b61058d67c893bb374728828d60c01b611be7565b806003819055506105a86751070e4489c21eb660c01b611be7565b6105bc673bd9b26ecb62289660c01b611be7565b7f1939de75d13c836ba62103f23c7a2622e9cbc2113aa33a8c74eb28e409313db2816040516105eb9190611f97565b60405180910390a150565b60035481565b610610675717dda538e36f9c60c01b611c7c565b610618611bea565b61062c6731684c0d7733ada760c01b611c7c565b610640675b5c75ed4174ee5f60c01b611c7c565b61065467ffb69390a3c1201360c01b611c7c565b6106686777f8062d1af77df660c01b611c7c565b610670611c7f565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106aa677a5345700d50a03a60c01b611be7565b6106b2611bea565b6106c6678ffdf978815f20d560c01b611be7565b6106da673ee47a740c9db99c60c01b611be7565b6106ee6761bcf65b32bbd95c60c01b611be7565b61070267afafc3e07b7658c160c01b611be7565b61070a611c7f565b565b6107206731a445bade3ebb4160c01b611be7565b610728611bea565b61073c677fde8752a5669a6a60c01b611be7565b610750677fda3fbe0a6a2abf60c01b611be7565b61076467907bf0fb09922d7f60c01b611be7565b610778674c04f2f1e7dd73b460c01b611be7565b610780611ce2565b565b610796670700f2a431ee58d960c01b611c7c565b61079e611d45565b6107b2670a70c6b2336d5f4e60c01b611c7c565b6107c667aa18521c9f1cdbb660c01b611c7c565b6107ce611d94565b6107e267eb0ea2c3b5b69dec60c01b611c7c565b6107f6672f2693e8647d564d60c01b611c7c565b61080a67d790e3624bc0140d60c01b611c7c565b61081e67108d3e23148a599260c01b611c7c565b6108326786381a34bee8bf2960c01b611c7c565b6005543411610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90612137565b60405180910390fd5b61088a6738ade48744d4f19e60c01b611c7c565b61089e67e31cde6d0cc9cd0560c01b611c7c565b6108b267e2360f7410f836bd60c01b611c7c565b6108c667381c6def88311b8d60c01b611c7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612175565b60405180910390fd5b61094967ac30444dae65d43d60c01b611c7c565b61095d674aec59e7b5737a9860c01b611c7c565b6109716798ad738bb4e5c14260c01b611c7c565b6109796119eb565b61098d67523fdb28d5d2a11360c01b611c7c565b6109a1673855e5909f291cd860c01b611c7c565b6000600554346109b191906121b3565b90506109c76718ba5e470cc60ef460c01b611c7c565b6109db6738625f2b14ec2bfd60c01b611c7c565b600082826040516020016109f09291906121d1565b6040516020818303038152906040529050610a15678be581386f7b847960c01b611c7c565b610a2967ad2520f421b78f9b60c01b611c7c565b60006040518060a0016040528085604051602001610a4791906120ac565b6040516020818303038152906040528152602001838152602001600067ffffffffffffffff811115610a7c57610a7b6121f1565b5b604051908082528060200260200182016040528015610ab557816020015b610aa2611f67565b815260200190600190039081610a9a5790505b508152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001604051806020016040528060008152508152509050610b0167b071ac0303f98b6760c01b611c7c565b610b1567ae66e7eaa1062c7360c01b611c7c565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9346089856040518463ffffffff1660e01b8152600401610b74929190612253565b60206040518083038185885af1158015610b92573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bb79190612337565b9050610bcd6726a8e7ea48be2c7e60c01b611c7c565b610be1675ba1778a65e30c8260c01b611c7c565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827f3c20d4e8f42599eddf3cdb1184580d4ad4d4a3063dbd500a519f8fcf11ea241487604051610c3f9190611f97565b60405180910390a450505050610c53611dde565b50565b6000600260149054906101000a900460ff16905090565b60046020528060005260406000206000915090505481565b610c99673f5f567dd842b41c60c01b611c7c565b610ca1611bea565b610cb567b377b7bb876d17c560c01b611c7c565b610cc967406bc5fca4d6466e60c01b611c7c565b610cdd671eb66e8cec7314ce60c01b611c7c565b610cf167ec0ce495edd639d860c01b611c7c565b610d05675caa80fefb6d949760c01b611c7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90612175565b60405180910390fd5b610d8867569a0b0296d60d1160c01b611c7c565b610d9c676640f66f9c859e2560c01b611c7c565b610db067f098f561f7124a1e60c01b611c7c565b6000479050610dc96716ebae3422df1da560c01b611c7c565b610ddd67900d6608bb7bc78760c01b611c7c565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610e0390612353565b60006040518083038185875af1925050503d8060008114610e40576040519150601f19603f3d011682016040523d82523d6000602084013e610e45565b606091505b50509050610e5d673540be2febd0b31e60c01b611c7c565b610e7167d473b1bc3c3dc10b60c01b611c7c565b610e8567699db1f3e42e66bd60c01b611c7c565b80610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc9061235d565b60405180910390fd5b610ed9671a0df8e66fbec86460c01b611c7c565b610eed676275826f0ad28c4360c01b611c7c565b610f0167717d0aede648941060c01b611c7c565b8273ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969583604051610f479190611f97565b60405180910390a2505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdb9061239b565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60055481565b6111056734766122666e8b4d60c01b611c7c565b61110d611bea565b611121676f2456c06f0d0c8660c01b611c7c565b61113567e480bae594fbcef160c01b611c7c565b61114967b8f098e6bca68fa060c01b611c7c565b61115d67d042281a608259d760c01b611c7c565b611165611ce2565b565b61117b67ed3f502ca9b8d72960c01b611c7c565b611183611d94565b6111976704b5fdae19adf79460c01b611c7c565b6111ab67c9de36c533ae2b2160c01b611c7c565b6111bf67f72d5da2abc6c9dd60c01b611c7c565b6111d367ecabf6acd03b5e5b60c01b611c7c565b6111e767ae2966b3e28f49df60c01b611c7c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c906123d9565b60405180910390fd5b61128967919393bda31d1c5360c01b611c7c565b61129d67c453fbd9b911e1b860c01b611c7c565b6112b167e7b6c8db9ea653dd60c01b611c7c565b6112c567a34b08efe7ad0d3660c01b611c7c565b608a8160200160208101906112da9190612417565b67ffffffffffffffff1614611324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131b9061244b565b60405180910390fd5b61133867b1227e995299d4db60c01b611c7c565b61134c67b2fe1417003e303660c01b611c7c565b61136067bd858fe612a7c53b60c01b611c7c565b6113686119eb565b61137c67b404e85bd252991560c01b611c7c565b611390677412e169533561cf60c01b611c7c565b60008180604001906113a29190612489565b906113ad91906124db565b60601c90506113c6675967210aa8f2d1c360c01b611c7c565b6113da67dd5a1f6fb98be4fd60c01b611c7c565b6000808380606001906113ed9190612489565b8101906113fa9190612513565b91509150611412671812443adbd60dc260c01b611c7c565b611426677c2914583116c3b060c01b611c7c565b61143a679ee77455348b84ad60c01b611c7c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a090612175565b60405180910390fd5b6114bd6750cea80432a4ee8560c01b611c7c565b6114d16705f40b5a000948d060c01b611c7c565b6114e567b019f8f9ecb4393660c01b611c7c565b6114f9676da62c4b26fa79c060c01b611c7c565b6000811161153c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153390612543565b60405180910390fd5b611550671f09043d7c56de8760c01b611c7c565b611564676064ced7d804dae860c01b611c7c565b6115786706b6a34b4a8cd98360c01b611c7c565b61158c67dc18f358ac62e50260c01b611c7c565b804710156115cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c690612581565b60405180910390fd5b6115e367bbe408ccc6f6606160c01b611c7c565b6115f767f62b6d10d7eca61960c01b611c7c565b61160b6701bf7034ae46992e60c01b611c7c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561167357600080fd5b505af1158015611687573d6000803e3d6000fd5b50505050506116a0673da3dd7e0be0441460c01b611c7c565b6116b467feefadc3dcda3f6660c01b611c7c565b6116c86751d4235c32c5cc1960c01b611c7c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016117239291906121d1565b6020604051808303816000875af1158015611742573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176691906125bf565b6117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179c906125eb565b60405180910390fd5b6117b9670d3e5493b88e1ac960c01b611c7c565b6117cd679c642a05e6fbbdcf60c01b611c7c565b6117e167b049f61b325d767f60c01b611c7c565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1685600001357ff70d2dfb20a334fd3c84cd702f67ad5ba48227a1c9d7d2a96b68e5c50258d755846040516118439190611f97565b60405180910390a450505050565b600061186767605a91703b106ab360c01b611c7c565b61187b671c23da8d38e383a460c01b611c7c565b61188f67773761eb5077a74960c01b611c7c565b600554905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6118d56765b6e809e624dbf360c01b611c7c565b6118dd611bea565b6118f16796ded56649fe24f360c01b611c7c565b61190567370787762170e35560c01b611c7c565b61191967cfada262c54dbbe160c01b611c7c565b806005819055506119346786b73edded1377b860c01b611c7c565b6119486769d8cb93b8133a4d60c01b611c7c565b7f42dfb00d085d601e55327921154ae76c1b24270b026c5a0c51caee18eb4c401f816040516119779190611f97565b60405180910390a150565b608981565b600061199d6722f11e3cfeb5b2a960c01b611c7c565b6119b16791307b0592be213860c01b611c7c565b6119c56759b31102dfe45ebd60c01b611c7c565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b6119ff679158822cbc97126060c01b611be7565b611a07611d94565b611a1b67b75483368421ade660c01b611be7565b611a2f6736994df26933ba4760c01b611be7565b611a4367e36f33d8747bb29960c01b611be7565b611a5767157b76f1439625e560c01b611be7565b6000611a616104e4565b9050611a7767508349aefb60ebf660c01b611be7565b611a8b67ef38d91b3d97b83460c01b611be7565b611a9f67e4907bcab8a21f8f60c01b611be7565b600354600460008381526020019081526020016000205410611af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aed90612629565b60405180910390fd5b611b0a674dc3ac9a029af46060c01b611be7565b611b1e672d8c5c7aa23611cc60c01b611be7565b600460008281526020019081526020016000206000815480929190611b429061268d565b9190505550611b5b670540861cf1ea72a360c01b611be7565b611b6f672f3f5a17d545202560c01b611be7565b7f18d40bf3aed310fecb4c4b5f29e3d33783bbeef10318fd51c9e9fdea872d6add81604051611b9e9190611f97565b60405180910390a150565b610e1081565b611bb7611bea565b611bc081611de8565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c71906126ab565b60405180910390fd5b565b50565b611c87611f16565b6000600260146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ccb611f5f565b604051611cd891906120ac565b60405180910390a1565b611cea611d94565b6001600260146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d2e611f5f565b604051611d3b91906120ac565b60405180910390a1565b600260005403611d8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d81906126e9565b60405180910390fd5b6002600081905550565b611d9c610c56565b15611ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd390612727565b60405180910390fd5b565b6001600081905550565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4d90612765565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b611f1e610c56565b611f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f54906127a3565b60405180910390fd5b565b600033905090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600060208201905082825292915050565b600060208284031215611fba57600080fd5b8135905092915050565b600060208201905060018060a01b038316825292915050565b60018060a01b0381168114611ff157600080fd5b50565b60006020828403121561200657600080fd5b813561201181611fdd565b8091505092915050565b6000602082019050821515825292915050565b60006020828403121561204057600080fd5b813561204b81611fdd565b8091505092915050565b60006020828403121561206757600080fd5b813567ffffffffffffffff81111561207e57600080fd5b808301905060a0818503121561209357600080fd5b8091505092915050565b60018060a01b03811682525050565b600060208201905060018060a01b038316825292915050565b600060208201905067ffffffffffffffff8316825292915050565b600060208201905060018060a01b038316825292915050565b634e487b7160e01b600052601160045260246000fd5b60008261212c57634e487b7160e01b600052601260045260246000fd5b828204905092915050565b60208152601360208201527f496e73756666696369656e7420616d6f756e740000000000000000000000000060408201526000606082019050919050565b60208152601160208201527f496e76616c696420726563697069656e7400000000000000000000000000000060408201526000606082019050919050565b60008282039050818111156121cb576121ca6120f9565b5b92915050565b600060408201905060018060a01b03841682528260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b6000815180845260005b8181101561223357602080828601015181838801015250602081019050612211565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261228060e0860182612207565b905081860151603f198087840301606088015261229d8383612207565b92508488015191508087840301608088015282825180855285850191508584019450600093505b808410156122f857845160018060a01b038151168352868101518784015250868201915085850194506001840193506122c4565b506060890151955061230d60a089018761209d565b60808901519550818882030160c08901526123288187612207565b96505050505050509392505050565b60006020828403121561234957600080fd5b8151905092915050565b6000819050919050565b60208152600f60208201527f5472616e73666572206661696c6564000000000000000000000000000000000060408201526000606082019050919050565b60208152601660208201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060408201526000606082019050919050565b60208152601360208201527f556e617574686f72697a65642073656e6465720000000000000000000000000060408201526000606082019050919050565b60006020828403121561242957600080fd5b813567ffffffffffffffff8116811461244157600080fd5b8091505092915050565b60208152601460208201527f496e76616c696420736f7572636520636861696e00000000000000000000000060408201526000606082019050919050565b6000808335601e198436030181126124a057600080fd5b80840190508035915067ffffffffffffffff8211156124be57600080fd5b602081019250508036038213156124d457600080fd5b9250929050565b600081356bffffffffffffffffffffffff198082169250601485101561250b5780818660140360031b1b83161692505b505092915050565b6000806040838503121561252657600080fd5b823561253181611fdd565b80925050602083013590509250929050565b60208152601d60208201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060408201526000606082019050919050565b60208152601460208201527f496e73756666696369656e742062616c616e636500000000000000000000000060408201526000606082019050919050565b6000602082840312156125d157600080fd5b815180151581146125e157600080fd5b8091505092915050565b60208152601460208201527f57455448207472616e73666572206661696c656400000000000000000000000060408201526000606082019050919050565b60208152602660208201527f52617465206c696d697420657863656564656420666f722063757272656e742060408201527f706572696f64000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b6000801982036126a05761269f6120f9565b5b600182019050919050565b60208152601660208201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060408201526000606082019050919050565b60208152601f60208201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060408201526000606082019050919050565b60208152601060208201527f5061757361626c653a207061757365640000000000000000000000000000000060408201526000606082019050919050565b60208152601760208201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060408201526000606082019050919050565b60208152601460208201527f5061757361626c653a206e6f74207061757365640000000000000000000000006040820152600060608201905091905056fea26469706673582212209e7026b2ea09d7ff8ac07a5c7ccb9bd76a525cdd3f31efd090865f5a3595da7764736f6c63430008130033";

type CrossChainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainMessenger__factory extends ContractFactory {
  constructor(...args: CrossChainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainMessenger> {
    return super.deploy(
      _router,
      _weth,
      _maxMessagesPerPeriod,
      overrides || {}
    ) as Promise<CrossChainMessenger>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _weth,
      _maxMessagesPerPeriod,
      overrides || {}
    );
  }
  override attach(address: string): CrossChainMessenger {
    return super.attach(address) as CrossChainMessenger;
  }
  override connect(signer: Signer): CrossChainMessenger__factory {
    return super.connect(signer) as CrossChainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainMessengerInterface {
    return new utils.Interface(_abi) as CrossChainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainMessenger {
    return new Contract(address, _abi, signerOrProvider) as CrossChainMessenger;
  }
}
