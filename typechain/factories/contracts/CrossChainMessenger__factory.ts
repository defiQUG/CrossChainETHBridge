/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CrossChainMessenger,
  CrossChainMessengerInterface,
} from "../../contracts/CrossChainMessenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_MESSAGES_PER_HOUR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POLYGON_CHAIN_SELECTOR",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouterClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendToPolygon",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "updateBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516111e63803806111e683398101604081905261002f916101e3565b33806000816100855760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b5576100b58161013a565b50506001600255506003805460ff191690556001600160a01b03811661011d5760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726f75746572206164647265737300000000000000000000604482015260640161007c565b6001600160a01b031660805267016345785d8a0000600455610213565b336001600160a01b038216036101925760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000602082840312156101f557600080fd5b81516001600160a01b038116811461020c57600080fd5b9392505050565b608051610fa3610243600039600081816102bd01528181610313015281816104ec01526108020152610fa36000f3fe6080604052600436106101025760003560e01c806382b12dd7116100955780638da5cb5b116100645780638da5cb5b1461024e578063a98de88814610280578063b0f479a1146102ae578063f2fde38b146102e1578063f887ea401461030157600080fd5b806382b12dd7146101ee5780638456cb591461020457806385572ffb1461021957806385659de11461023957600080fd5b80635a1c0366116100d15780635a1c0366146101765780635c975abb146101965780636ff1c9bc146101b957806379ba5097146101d957600080fd5b80632366af531461010e5780633f4ba83a14610136578063529c75881461014d578063541438331461016357600080fd5b3661010957005b600080fd5b34801561011a57600080fd5b50610123606481565b6040519081526020015b60405180910390f35b34801561014257600080fd5b5061014b610335565b005b34801561015957600080fd5b5061012360055481565b61014b610171366004610c9a565b610347565b34801561018257600080fd5b5061014b610191366004610cbe565b6105e7565b3480156101a257600080fd5b5060035460ff16604051901515815260200161012d565b3480156101c557600080fd5b5061014b6101d4366004610c9a565b61062a565b3480156101e557600080fd5b5061014b610735565b3480156101fa57600080fd5b5061012360045481565b34801561021057600080fd5b5061014b6107df565b34801561022557600080fd5b5061014b610234366004610cd7565b6107ef565b34801561024557600080fd5b50600454610123565b34801561025a57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161012d565b34801561028c57600080fd5b50610295608981565b60405167ffffffffffffffff909116815260200161012d565b3480156102ba57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610268565b3480156102ed57600080fd5b5061014b6102fc366004610c9a565b610a03565b34801561030d57600080fd5b506102687f000000000000000000000000000000000000000000000000000000000000000081565b61033d610a14565b610345610a67565b565b61034f610ab9565b610357610b10565b60045434116103a35760405162461bcd60e51b8152602060048201526013602482015272125b9cdd59999a58da595b9d08185b5bdd5b9d606a1b60448201526064015b60405180910390fd5b6064600554106103ee5760405162461bcd60e51b815260206004820152601660248201527513595cdcd859d9481b1a5b5a5d08195e18d95959195960521b604482015260640161039a565b6001600160a01b0381166104145760405162461bcd60e51b815260040161039a90610d12565b6000600454346104249190610d53565b604080516001600160a01b03851660208083018290528284018590528351808403850181526101008401855261012080850193909352845180850390930183526101408401855260608401928352608084018190528451600080825292810190955294955092909160a00190836104bd565b60408051808201909152600080825260208201528152602001906001900390816104965790505b508152600060208083018290526040805191820181528282529283015290516396f4e9f960e01b8152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396f4e9f990349061052e906089908790600401610db2565b60206040518083038185885af115801561054c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105719190610e8c565b60058054919250600061058383610ea5565b9190505550846001600160a01b0316336001600160a01b0316827f3c20d4e8f42599eddf3cdb1184580d4ad4d4a3063dbd500a519f8fcf11ea2414876040516105ce91815260200190565b60405180910390a4505050506105e46001600255565b50565b6105ef610a14565b60048190556040518181527f42dfb00d085d601e55327921154ae76c1b24270b026c5a0c51caee18eb4c401f9060200160405180910390a150565b610632610a14565b6001600160a01b0381166106585760405162461bcd60e51b815260040161039a90610d12565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146106a5576040519150601f19603f3d011682016040523d82523d6000602084013e6106aa565b606091505b50509050806106ed5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161039a565b826001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96958360405161072891815260200190565b60405180910390a2505050565b6001546001600160a01b031633146107885760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b604482015260640161039a565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6107e7610a14565b610345610b56565b6107f7610b10565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108665760405162461bcd60e51b815260206004820152601460248201527313db9b1e481c9bdd5d195c8818d85b8818d85b1b60621b604482015260640161039a565b60006108756040830183610ebe565b61087e91610f0c565b60601c90506000808380606001906108969190610ebe565b8101906108a39190610f41565b90925090506001600160a01b0382166108ce5760405162461bcd60e51b815260040161039a90610d12565b804710156109155760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161039a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610962576040519150601f19603f3d011682016040523d82523d6000602084013e610967565b606091505b50509050806109aa5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161039a565b826001600160a01b0316846001600160a01b031686600001357ff70d2dfb20a334fd3c84cd702f67ad5ba48227a1c9d7d2a96b68e5c50258d755856040516109f491815260200190565b60405180910390a45050505050565b610a0b610a14565b6105e481610b93565b6000546001600160a01b031633146103455760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015260640161039a565b610a6f610c3c565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6002805403610b0a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161039a565b60028055565b60035460ff16156103455760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161039a565b610b5e610b10565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a9c3390565b336001600160a01b03821603610beb5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161039a565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60035460ff166103455760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161039a565b6001600160a01b03811681146105e457600080fd5b600060208284031215610cac57600080fd5b8135610cb781610c85565b9392505050565b600060208284031215610cd057600080fd5b5035919050565b600060208284031215610ce957600080fd5b813567ffffffffffffffff811115610d0057600080fd5b820160a08185031215610cb757600080fd5b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d6657610d66610d3d565b92915050565b6000815180845260005b81811015610d9257602081850181015186830182015201610d76565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610ddf60e0860182610d6c565b905081860151603f1980878403016060880152610dfc8383610d6c565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610e4f57845180516001600160a01b0316835286015186830152938501936001939093019290860190610e1d565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610e7e8187610d6c565b9a9950505050505050505050565b600060208284031215610e9e57600080fd5b5051919050565b600060018201610eb757610eb7610d3d565b5060010190565b6000808335601e19843603018112610ed557600080fd5b83018035915067ffffffffffffffff821115610ef057600080fd5b602001915036819003821315610f0557600080fd5b9250929050565b6bffffffffffffffffffffffff198135818116916014851015610f395780818660140360031b1b83161692505b505092915050565b60008060408385031215610f5457600080fd5b8235610f5f81610c85565b94602093909301359350505056fea2646970667358221220580c56a82565eff3b25d3a3e162c93f1d590b43a377dd150074fc01ccaface6764736f6c63430008130033";

type CrossChainMessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainMessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainMessenger__factory extends ContractFactory {
  constructor(...args: CrossChainMessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrossChainMessenger> {
    return super.deploy(
      _router,
      overrides || {}
    ) as Promise<CrossChainMessenger>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): CrossChainMessenger {
    return super.attach(address) as CrossChainMessenger;
  }
  override connect(signer: Signer): CrossChainMessenger__factory {
    return super.connect(signer) as CrossChainMessenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainMessengerInterface {
    return new utils.Interface(_abi) as CrossChainMessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainMessenger {
    return new Contract(address, _abi, signerOrProvider) as CrossChainMessenger;
  }
}
