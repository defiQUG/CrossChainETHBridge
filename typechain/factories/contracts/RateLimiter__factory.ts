/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RateLimiter,
  RateLimiterInterface,
} from "../../contracts/RateLimiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "RateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "RATE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMessagesPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messageCountByPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxMessagesPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161082b38038061082b83398101604081905261002f91610176565b33806000816100855760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b5576100b5816100cd565b50506001805460ff60a01b191690555060025561018f565b336001600160a01b038216036101255760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561018857600080fd5b5051919050565b61068d8061019e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80635cb69e65116100715780635cb69e651461011f57806379ba50971461013f5780638da5cb5b14610147578063befe2cb514610162578063c325dd4c1461016a578063f2fde38b1461017357600080fd5b8063086146d2146100b95780632fbc4558146100d45780633697a3ae146100e95780634a4e3bd5146100f257806351858e27146100fa5780635c975abb14610102575b600080fd5b6100c1610186565b6040519081526020015b60405180910390f35b6100e76100e23660046105c5565b610199565b005b6100c160025481565b6100e76101dd565b6100e76101ef565b600154600160a01b900460ff1660405190151581526020016100cb565b6100c161012d3660046105c5565b60036020526000908152604090205481565b6100e76101ff565b6000546040516001600160a01b0390911681526020016100cb565b6100e76102ae565b6100c1610e1081565b6100e76101813660046105de565b610380565b6000610194610e104261060e565b905090565b6101a1610394565b60028190556040518181527f1939de75d13c836ba62103f23c7a2622e9cbc2113aa33a8c74eb28e409313db2906020015b60405180910390a150565b6101e5610394565b6101ed6103e7565b565b6101f7610394565b6101ed61043c565b6001546001600160a01b031633146102575760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6102b661047f565b60006102c0610186565b600254600082815260036020526040902054919250116103315760405162461bcd60e51b815260206004820152602660248201527f52617465206c696d697420657863656564656420666f722063757272656e74206044820152651c195c9a5bd960d21b606482015260840161024e565b600081815260036020526040812080549161034b83610630565b90915550506040518181527f18d40bf3aed310fecb4c4b5f29e3d33783bbeef10318fd51c9e9fdea872d6add906020016101d2565b610388610394565b610391816104cc565b50565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b604482015260640161024e565b6103ef610575565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61044461047f565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861041f3390565b600154600160a01b900460ff16156101ed5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161024e565b336001600160a01b038216036105245760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161024e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600154600160a01b900460ff166101ed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161024e565b6000602082840312156105d757600080fd5b5035919050565b6000602082840312156105f057600080fd5b81356001600160a01b038116811461060757600080fd5b9392505050565b60008261062b57634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161065057634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220da541c1f2e04df3604fa8a9eef75680661ee0f74db2ecdfd7416045d92f5882d64736f6c63430008130033";

type RateLimiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RateLimiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RateLimiter__factory extends ContractFactory {
  constructor(...args: RateLimiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RateLimiter> {
    return super.deploy(
      _maxMessagesPerPeriod,
      overrides || {}
    ) as Promise<RateLimiter>;
  }
  override getDeployTransaction(
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxMessagesPerPeriod, overrides || {});
  }
  override attach(address: string): RateLimiter {
    return super.attach(address) as RateLimiter;
  }
  override connect(signer: Signer): RateLimiter__factory {
    return super.connect(signer) as RateLimiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RateLimiterInterface {
    return new utils.Interface(_abi) as RateLimiterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RateLimiter {
    return new Contract(address, _abi, signerOrProvider) as RateLimiter;
  }
}
