/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RateLimiter,
  RateLimiterInterface,
} from "../../contracts/RateLimiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "RateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "RATE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMessagesPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messageCountByPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessagesPerPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxMessagesPerPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b11380380610b1183398181016040528101906100329190610179565b60008060006101000a81548160ff02191690831515021790555061006861005d6100a960201b60201c565b6100b160201b60201c565b61008267e36f33d8747bb29960c01b61017660201b60201c565b61009c67157b76f1439625e560c01b61017660201b60201c565b8060018190555050610195565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b60006020828403121561018b57600080fd5b8151905092915050565b61096d806101a46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635c975abb116100715780635c975abb1461011a5780635cb69e6514610138578063715018a6146101685780638da5cb5b14610172578063c325dd4c14610190578063f2fde38b146101ae576100a9565b8063086146d2146100ae5780632fbc4558146100cc5780633697a3ae146100e85780634a4e3bd51461010657806351858e2714610110575b600080fd5b6100b66101ca565b6040516100c39190610767565b60405180910390f35b6100e660048036038101906100e19190610778565b61021b565b005b6100f06102dc565b6040516100fd9190610767565b60405180910390f35b61010e6102e2565b005b610118610358565b005b6101226103ce565b60405161012f9190610794565b60405180910390f35b610152600480360381019061014d9190610778565b6103e4565b60405161015f9190610767565b60405180910390f35b6101706103fc565b005b61017a610410565b60405161018791906107a7565b60405180910390f35b610198610439565b6040516101a59190610767565b60405180910390f35b6101c860048036038101906101c391906107c0565b61043f565b005b60006101e0672f3f5a17d545202560c01b6104c2565b6101f467bec7688fe123722160c01b6104c2565b610208675dba5ca849774cf160c01b6104c2565b610e104261021691906107f2565b905090565b61022f67db2ff7cc55fb86f860c01b6104c2565b6102376104c5565b61024b67d5f0a3a1372c57cb60c01b6104c2565b61025f67e4907bcab8a21f8f60c01b6104c2565b610273674dc3ac9a029af46060c01b6104c2565b8060018190555061028e672d8c5c7aa23611cc60c01b6104c2565b6102a2670540861cf1ea72a360c01b6104c2565b7f1939de75d13c836ba62103f23c7a2622e9cbc2113aa33a8c74eb28e409313db2816040516102d19190610767565b60405180910390a150565b60015481565b6102f667ea5cc14ab5aaa0dc60c01b6104c2565b6102fe6104c5565b61031267cafe3fd4ef9da4fb60c01b6104c2565b610326675b7f3728b4a9308b60c01b6104c2565b61033a6790adbcd5c5c39d0560c01b6104c2565b61034e67923b15c64c3a507c60c01b6104c2565b610356610543565b565b61036c673e6b6a24663c78ae60c01b6104c2565b6103746104c5565b61038867cc0d7a3a66a2a9e760c01b6104c2565b61039c67afafc3e07b7658c160c01b6104c2565b6103b06722951cb689cb0d9160c01b6104c2565b6103c4672a41dfb5bf5e129960c01b6104c2565b6103cc6105a5565b565b60008060009054906101000a900460ff16905090565b60026020528060005260406000206000915090505481565b6104046104c5565b61040e6000610607565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610e1081565b6104476104c5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad9061081a565b60405180910390fd5b6104bf81610607565b50565b50565b6104cd6106cc565b73ffffffffffffffffffffffffffffffffffffffff166104eb610410565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105389061087e565b60405180910390fd5b565b61054b6106d4565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61058e6106cc565b60405161059b91906107a7565b60405180910390a1565b6105ad61071d565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105f06106cc565b6040516105fd91906107a7565b60405180910390a1565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6106dc6103ce565b61071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906108bb565b60405180910390fd5b565b6107256103ce565b15610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c906108f9565b60405180910390fd5b565b600060208201905082825292915050565b60006020828403121561078a57600080fd5b8135905092915050565b6000602082019050821515825292915050565b600060208201905060018060a01b038316825292915050565b6000602082840312156107d257600080fd5b813560018060a01b03811681146107e857600080fd5b8091505092915050565b60008261080f57634e487b7160e01b600052601260045260246000fd5b828204905092915050565b60208152602660208201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f646472657373000000000000000000000000000000000000000000000000000060608201526000608082019050919050565b602081526020808201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526000606082019050919050565b60208152601460208201527f5061757361626c653a206e6f742070617573656400000000000000000000000060408201526000606082019050919050565b60208152601060208201527f5061757361626c653a20706175736564000000000000000000000000000000006040820152600060608201905091905056fea26469706673582212206c687ccf77caac1bdd88b2556204b8d1f9add2296c98060ad6a1c368cbefecc064736f6c63430008130033";

type RateLimiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RateLimiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RateLimiter__factory extends ContractFactory {
  constructor(...args: RateLimiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RateLimiter> {
    return super.deploy(
      _maxMessagesPerPeriod,
      overrides || {}
    ) as Promise<RateLimiter>;
  }
  override getDeployTransaction(
    _maxMessagesPerPeriod: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxMessagesPerPeriod, overrides || {});
  }
  override attach(address: string): RateLimiter {
    return super.attach(address) as RateLimiter;
  }
  override connect(signer: Signer): RateLimiter__factory {
    return super.connect(signer) as RateLimiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RateLimiterInterface {
    return new utils.Interface(_abi) as RateLimiterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RateLimiter {
    return new Contract(address, _abi, signerOrProvider) as RateLimiter;
  }
}
